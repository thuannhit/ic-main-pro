version: '3'
services:
  ui-svc:
    build: ./ui-svc
    restart: always
    hostname: ui-svc
    env_file:
      - .env.test
    networks:
      - frontend
    links:
      - gateway
    ports:
      - ${UI_SERVICE_PORT}:${UI_SERVICE_PORT}

  gateway:
    build: ./gateway
    restart: always
    hostname: gateway
    env_file:
      - .env
    ports:
      - "8000:8000"
    networks:
      - backend
      - frontend

  order:
    build: ./order
    restart: always
    hostname: order
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    ports:
      - ${ORDER_SERVICE_PORT}:${ORDER_SERVICE_PORT}
  auth:
    build: ./auth
    restart: always
    hostname: auth
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - db
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
  mailer:
    build: ./mailer
    restart: always
    hostname: mailer
    env_file:
      - .env.test
    networks:
      - backend
    ports:
      - ${MAILER_SERVICE_PORT}:${MAILER_SERVICE_PORT}
  permission:
    build: ./permission
    restart: always
    hostname: permission
    env_file:
      - .env.test
    networks:
      - backend
    ports:
      - 8005:8005
  user:
    build: ./user
    restart: always
    hostname: user
    env_file:
      - .env.test
    networks:
      - backend
    links:
      - mailer
      - db
    ports:
      - ${USER_SERVICE_PORT}:${USER_SERVICE_PORT}
  db:
    image: 'mongo:3.7'
    restart: always
    hostname: db
    environment:
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    volumes:
      - "./db/init/:/docker-entrypoint-initdb.d/"
    ports:
      - 27017:27017
    networks:
      - backend
    env_file:
      - .env.test
networks:
  backend:
    driver: bridge
  frontend:
    external:
      name: infrastructure
